generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  processos   Processo[]
  lancamentos Lancamento[]
  
  // --- RELACIONAMENTO ADICIONADO ---
  settings    UserSettings? // Relacionamento um-para-um opcional
}

model Lancamento {
  id        String   @id @default(uuid())
  data      DateTime
  historico String
  valor     Decimal
  tipo      TipoLancamento

  processoId String?
  processo   Processo? @relation(fields: [processoId], references: [id])

  userId    String
  user      User    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Processo {
  id            String   @id @default(uuid())
  numero        String   @unique
  credor        String
  empenhoNumero String
  empenhoVerba  String
  status        StatusProcesso @default(PENDENTE)

  lancamentos Lancamento[]

  userId        String
  user          User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// --- MODELO NOVO ---
model UserSettings {
  id          String  @id @default(uuid())
  companyName String?
  cnpj        String?
  address     String?
  logoUrl     String?

  // Chave estrangeira para o relacionamento um-para-um
  userId      String  @unique
  user        User    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


enum TipoLancamento {
  DEBITO
  CREDITO
}

enum StatusProcesso {
  PENDENTE
  LIQUIDADO
}
