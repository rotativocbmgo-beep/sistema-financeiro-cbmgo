// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL" )
  directUrl = env("DIRECT_URL")
}

// Enum para definir os papéis de usuário permitidos
enum Role {
  USER
  ADMIN
}

// Enum para o status do processo
enum StatusProcesso {
  PENDENTE
  LIQUIDADO
}

// Enum para o tipo de lançamento
enum TipoLancamento {
  CREDITO
  DEBITO
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  settings  UserSettings?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relações
  processos  Processo[]
  lancamentos Lancamento[]

  @@map("users") // <-- ADICIONADO
}

model UserSettings {
  id                            String   @id @default(uuid())
  user                          User     @relation(fields: [userId], references: [id])
  userId                        String   @unique
  receber_notificacoes_processo Boolean  @default(true)
  receber_notificacoes_pagamento Boolean  @default(true)
  receber_notificacoes_reposicao Boolean  @default(true)
  createdAt                     DateTime @default(now())
  updatedAt                     DateTime @updatedAt

  @@map("user_settings") // <-- ADICIONADO
}

model Processo {
  id            String   @id @default(uuid())
  numero        String   @unique
  credor        String
  empenhoNumero String
  empenhoVerba  String
  status        StatusProcesso @default(PENDENTE)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relações
  user          User       @relation(fields: [userId], references: [id])
  userId        String
  lancamentos   Lancamento[]

  @@map("processos") // <-- ADICIONADO
}

model Lancamento {
  id          String   @id @default(uuid())
  data        DateTime
  historico   String
  valor       Decimal
  tipo        TipoLancamento
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relações
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  processo    Processo?  @relation(fields: [processoId], references: [id])
  processoId  String?

  @@map("lancamentos") // <-- ADICIONADO
}
